import { ProductRepository, ProductsPhoto } from "../../DB/requestsToDB";
import { FigurineCard } from "../../productCard/figurine–°ard";


describe('FigurineCard', () => {
    let figurineCard: FigurineCard;
    let productRepository: Partial<ProductRepository>;

    beforeEach(() => {
        productRepository = {
            respondsImagePath: jest.fn().mockResolvedValue([
                { image_path: "path1" },
                { image_path: "path2" },
                { image_path: "path3" },
            ]),
            respondsProductCard1: jest.fn().mockResolvedValue([
                { product_name: 'Product A', price: '1000'},
            ]),
            respondsFeedbackRating: jest.fn().mockResolvedValue([
                { rating: 5 }, { rating: 4 }
            ])
        };

        figurineCard = new FigurineCard(productRepository as ProductRepository);
    });

    it('–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—â–µ–Ω –º–∞—Å—Å–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é', async () => {
        const result = await figurineCard.writingMessageToPhoto('testProductId');
        let message = `'Product A'

‚≠êÔ∏è 4.5 / 5

üí∞ 1000`;

        expect(result).toEqual([
            {
                type: 'photo',
                caption: message,
                media: 'path1'
            },
            {
                type: 'photo',
                media: 'path2'
            },
            {
                type: 'photo',
                media: 'path3'
            }
        ]);
    });
})